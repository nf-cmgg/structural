{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"nf-cmgg/structural","text":""},{"location":"#introduction","title":"Introduction","text":"<p>nf-cmgg/structural is a bioinformatics best-practice analysis pipeline for calling structural variants (SVs), copy number variants (CNVs) and repeat region expansions (RREs) from short DNA reads. The pipeline handles the calling of the variants and postprocessing (filtering, annotating...)</p> <p>The pipeline is built using Nextflow, a workflow tool to run tasks across multiple compute infrastructures in a very portable manner. It uses Docker/Singularity containers making installation trivial and results highly reproducible. The Nextflow DSL2 implementation of this pipeline uses one container per process which makes it much easier to maintain and update software dependencies. Where possible, these processes have been submitted to and installed from nf-core/modules in order to make them available to all Nextflow pipelines!</p> <p></p>"},{"location":"#usage","title":"Usage","text":"<p>Note</p> <p>If you are new to Nextflow and nf-core, please refer to this page on how to set-up Nextflow. Make sure to test your setup with <code>-profile test</code> before running the workflow on actual data.</p> <p>Now, you can run the pipeline using:</p> <pre><code>nextflow run nf-cmgg/structural \\\n   -profile &lt;docker/singularity/.../institute&gt; \\\n   --input samplesheet.csv \\\n   --outdir &lt;OUTDIR&gt;\n</code></pre> <p>Warning</p> <p>Please provide pipeline parameters via the CLI or Nextflow <code>-params-file</code> option. Custom config files including those provided by the <code>-c</code> Nextflow option can be used to provide any configuration except for parameters; see docs.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>The nf-cmgg/structural pipeline comes with documentation about the pipeline usage and output.</p> <p>Warning</p> <p>Please provide pipeline parameters via the CLI or Nextflow <code>-params-file</code> option. Custom config files including those provided by the <code>-c</code> Nextflow option can be used to provide any configuration except for parameters; see docs.</p>"},{"location":"#credits","title":"Credits","text":"<p>nf-cmgg/structural was originally written by Nicolas Vannieuwkerke and Mattias Van Heetvelde.</p>"},{"location":"#contributions-and-support","title":"Contributions and Support","text":"<p>If you would like to contribute to this pipeline, please see the contributing guidelines.</p>"},{"location":"#citations","title":"Citations","text":"<p>An extensive list of references for the tools used by the pipeline can be found in the <code>Citations</code> section.</p>"},{"location":"CITATIONS/","title":"nf-cmgg/structural: Citations","text":""},{"location":"CITATIONS/#nf-core","title":"nf-core","text":"<p>Ewels PA, Peltzer A, Fillinger S, Patel H, Alneberg J, Wilm A, Garcia MU, Di Tommaso P, Nahnsen S. The nf-core framework for community-curated bioinformatics pipelines. Nat Biotechnol. 2020 Mar;38(3):276-278. doi: 10.1038/s41587-020-0439-x. PubMed PMID: 32055031.</p>"},{"location":"CITATIONS/#nextflow","title":"Nextflow","text":"<p>Di Tommaso P, Chatzou M, Floden EW, Barja PP, Palumbo E, Notredame C. Nextflow enables reproducible computational workflows. Nat Biotechnol. 2017 Apr 11;35(4):316-319. doi: 10.1038/nbt.3820. PubMed PMID: 28398311.</p>"},{"location":"CITATIONS/#pipeline-tools","title":"Pipeline tools","text":"<ul> <li>AnnotSV</li> </ul> <p>Geoffroy V, Herenger Y, Kress A, Stoetzel C, Piton A, Dollfus H, Muller J. AnnotSV: an integrated tool for structural variations annotation. Bioinformatics. 2018 Oct 15;34(20):3572-3574. doi: 10.1093/bioinformatics/bty304. PMID: 29669011.</p> <ul> <li>BCFTools</li> </ul> <p>Li H: A statistical framework for SNP calling, mutation discovery, association mapping and population genetical parameter estimation from sequencing data. Bioinformatics. 2011 Nov 1;27(21):2987-93. doi: 10.1093/bioinformatics/btr509. PubMed PMID: 21903627; PubMed Central PMCID: PMC3198575.</p> <ul> <li> <p>bedgovcf</p> </li> <li> <p>DELLY</p> </li> </ul> <p>Tobias Rausch, Thomas Zichner, Andreas Schlattl, Adrian M. St\u00fctz, Vladimir Benes, Jan O. Korbel, DELLY: structural variant discovery by integrated paired-end and split-read analysis, Bioinformatics, Volume 28, Issue 18, September 2012, Pages i333\u2013i339, https://doi.org/10.1093/bioinformatics/bts378</p> <ul> <li>EnsemblVEP</li> </ul> <p>McLaren W, Gil L, Hunt SE, et al.: The Ensembl Variant Effect Predictor. Genome Biol. 2016 Jun 6;17(1):122. doi: 10.1186/s13059-016-0974-4. PubMed PMID: 27268795; PubMed Central PMCID: PMC4893825.</p> <ul> <li>ExpansionHunter</li> </ul> <p>Egor Dolzhenko, Viraj Deshpande, Felix Schlesinger, Peter Krusche, Roman Petrovski, Sai Chen, Dorothea Emig-Agius, Andrew Gross, Giuseppe Narzisi, Brett Bowman, Konrad Scheffler, Joke J F A van Vugt, Courtney French, Alba Sanchis-Juan, Kristina Ib\u00e1\u00f1ez, Arianna Tucci, Bryan R Lajoie, Jan H Veldink, F Lucy Raymond, Ryan J Taft, David R Bentley, Michael A Eberle, ExpansionHunter: a sequence-graph-based tool to analyze variation in short tandem repeat regions, Bioinformatics, Volume 35, Issue 22, November 2019, Pages 4754\u20134756, https://doi.org/10.1093/bioinformatics/btz431</p> <ul> <li> <p>Gawk</p> </li> <li> <p>GNU sed</p> </li> <li> <p>GNU tar</p> </li> <li> <p>Jasmine</p> </li> </ul> <p>Kirsche M, Prabhu G, Sherman R, Ni B, Battle A, Aganezov S, Schatz MC. Jasmine and Iris: population-scale structural variant comparison and analysis. Nat Methods. 2023 Mar;20(3):408-417. doi: 10.1038/s41592-022-01753-3. Epub 2023 Jan 19. PMID: 36658279; PMCID: PMC10006329.</p> <ul> <li>Manta</li> </ul> <p>Chen X, Schulz-Trieglaff O, Shaw R, et al.: Manta: rapid detection of structural variants and indels for germline and cancer sequencing applications. Bioinformatics. 2016 Apr 15;32(8):1220-2. doi: 10.1093/bioinformatics/btv710. PubMed PMID: 26647377.</p> <ul> <li>MultiQC</li> </ul> <p>Ewels P, Magnusson M, Lundin S, K\u00e4ller M. MultiQC: summarize analysis results for multiple tools and samples in a single report. Bioinformatics. 2016 Oct 1;32(19):3047-8. doi: 10.1093/bioinformatics/btw354. Epub 2016 Jun 16. PubMed PMID: 27312411; PubMed Central PMCID: PMC5039924.</p> <ul> <li> <p>ngs-bits</p> </li> <li> <p>SAMtools</p> </li> </ul> <p>Li H, Handsaker B, Wysoker A, Fennell T, Ruan J, Homer N, Marth G, Abecasis G, Durbin R; 1000 Genome Project Data Processing Subgroup. The Sequence Alignment/Map format and SAMtools. Bioinformatics. 2009 Aug 15;25(16):2078-9. doi: 10.1093/bioinformatics/btp352. Epub 2009 Jun 8. PubMed PMID: 19505943; PubMed Central PMCID: PMC2723002.</p> <ul> <li>QDNAseq</li> </ul> <p>Scheinin I, Sie D, Bengtsson H, van de Wiel MA, Olshen AB, van Thuijl HF, van Essen HF, Eijk PP, Rustenburg F, Meijer GA, Reijneveld JC, Wesseling P, Pinkel D, Albertson DG, Ylstra B. DNA copy number analysis of fresh and formalin-fixed specimens by shallow whole-genome sequencing with identification and exclusion of problematic regions in the genome assembly. Genome Res. 2014 Dec;24(12):2022-32. doi: 10.1101/gr.175141.114. Epub 2014 Sep 18. PMID: 25236618; PMCID: PMC4248318.</p> <ul> <li> <p>smoove</p> </li> <li> <p>svync</p> </li> <li> <p>Tabix</p> </li> </ul> <p>Li H, Tabix: fast retrieval of sequence features from generic TAB-delimited files, Bioinformatics, Volume 27, Issue 5, 1 March 2011, Pages 718\u2013719, doi: 10.1093/bioinformatics/btq671. PubMed PMID: 21208982. PubMed Central PMCID: PMC3042176.</p> <ul> <li>Vcfanno</li> </ul> <p>Pedersen, B.S., Layer, R.M. &amp; Quinlan, A.R. Vcfanno: fast, flexible annotation of genetic variants. Genome Biol 17, 118 (2016). https://doi.org/10.1186/s13059-016-0973-5</p> <ul> <li>WisecondorX</li> </ul> <p>Lennart Raman, Annelies Dheedene, Matthias De Smet, Jo Van Dorpe, Bj\u00f6rn Menten, WisecondorX: improved copy number detection for routine shallow whole-genome sequencing, Nucleic Acids Research, Volume 47, Issue 4, 28 February 2019, Pages 1605\u20131614, https://doi.org/10.1093/nar/gky1263</p>"},{"location":"CITATIONS/#software-packagingcontainerisation-tools","title":"Software packaging/containerisation tools","text":"<ul> <li>Anaconda</li> </ul> <p>Anaconda Software Distribution. Computer software. Vers. 2-2.4.0. Anaconda, Nov. 2016. Web.</p> <ul> <li>Bioconda</li> </ul> <p>Gr\u00fcning B, Dale R, Sj\u00f6din A, Chapman BA, Rowe J, Tomkins-Tinch CH, Valieris R, K\u00f6ster J; Bioconda Team. Bioconda: sustainable and comprehensive software distribution for the life sciences. Nat Methods. 2018 Jul;15(7):475-476. doi: 10.1038/s41592-018-0046-7. PubMed PMID: 29967506.</p> <ul> <li>BioContainers</li> </ul> <p>da Veiga Leprevost F, Gr\u00fcning B, Aflitos SA, R\u00f6st HL, Uszkoreit J, Barsnes H, Vaudel M, Moreno P, Gatto L, Weber J, Bai M, Jimenez RC, Sachsenberg T, Pfeuffer J, Alvarez RV, Griss J, Nesvizhskii AI, Perez-Riverol Y. BioContainers: an open-source and community-driven framework for software standardization. Bioinformatics. 2017 Aug 15;33(16):2580-2582. doi: 10.1093/bioinformatics/btx192. PubMed PMID: 28379341; PubMed Central PMCID: PMC5870671.</p> <ul> <li>Docker</li> </ul> <p>Merkel, D. (2014). Docker: lightweight linux containers for consistent development and deployment. Linux Journal, 2014(239), 2. doi: 10.5555/2600239.2600241.</p> <ul> <li>Singularity</li> </ul> <p>Kurtzer GM, Sochat V, Bauer MW. Singularity: Scientific containers for mobility of compute. PLoS One. 2017 May 11;12(5):e0177459. doi: 10.1371/journal.pone.0177459. eCollection 2017. PubMed PMID: 28494014; PubMed Central PMCID: PMC5426675.</p>"},{"location":"output/","title":"Output","text":""},{"location":"output/#introduction","title":"Introduction","text":"<p>This document describes the output produced by the pipeline. Most of the plots are taken from the MultiQC report, which summarises results at the end of the pipeline.</p> <p>The directories listed below will be created in the results directory after the pipeline has finished. All paths are relative to the top-level results directory.</p>"},{"location":"output/#pipeline-overview","title":"Pipeline overview","text":"<p>The pipeline is built using Nextflow and processes data using the following steps:</p> <ul> <li>MultiQC - Aggregate report describing results and QC from the whole pipeline</li> <li>Pipeline information - Report metrics generated during the workflow execution</li> </ul>"},{"location":"output/#multiqc","title":"MultiQC","text":"Output files <ul> <li><code>multiqc/</code></li> <li><code>multiqc_report.html</code>: a standalone HTML file that can be viewed in your web browser.</li> <li><code>multiqc_data/</code>: directory containing parsed statistics from the different tools used in the pipeline.</li> <li><code>multiqc_plots/</code>: directory containing static images from the report in various formats.</li> </ul> <p>MultiQC is a visualization tool that generates a single HTML report summarising all samples in your project. Most of the pipeline QC results are visualised in the report and further statistics are available in the report data directory.</p> <p>Results generated by MultiQC collate pipeline QC from supported tools e.g. FastQC. The pipeline has special steps which also allow the software versions to be reported in the MultiQC output for future traceability. For more information about how to use MultiQC reports, see http://multiqc.info.</p>"},{"location":"output/#pipeline-information","title":"Pipeline information","text":"Output files <ul> <li><code>pipeline_info/</code></li> <li>Reports generated by Nextflow: <code>execution_report.html</code>, <code>execution_timeline.html</code>, <code>execution_trace.txt</code> and <code>pipeline_dag.dot</code>/<code>pipeline_dag.svg</code>.</li> <li>Reports generated by the pipeline: <code>pipeline_report.html</code>, <code>pipeline_report.txt</code> and <code>software_versions.yml</code>. The <code>pipeline_report*</code> files will only be present if the <code>--email</code> / <code>--email_on_fail</code> parameter's are used when running the pipeline.</li> <li>Reformatted samplesheet files used as input to the pipeline: <code>samplesheet.valid.csv</code>.</li> <li>Parameters used by the pipeline run: <code>params.json</code>.</li> </ul> <p>Nextflow provides excellent functionality for generating various reports relevant to the running and execution of the pipeline. This will allow you to troubleshoot errors with the running of the pipeline, and also provide you with other information such as launch commands, run times and resource usage.</p>"},{"location":"parameters/","title":"Parameters","text":"<p>A nextflow pipeline for calling structural variants</p>"},{"location":"parameters/#inputoutput-options","title":"Input/output options","text":"<p>Define where the pipeline should find input data and save output data.</p> Parameter Description Type Default Required Hidden <code>input</code> Path to comma-separated file containing information about the samples in the experiment. HelpYou will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. <code>string</code> True <code>outdir</code> The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure. <code>string</code> True <code>email</code> Email address for completion summary. HelpSet this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (<code>~/.nextflow/config</code>) then you don't need to specify this on the command line for every run. <code>string</code> <code>multiqc_title</code> MultiQC report title. Printed as page header, used for filename if not otherwise specified. <code>string</code>"},{"location":"parameters/#reference-genome-options","title":"Reference genome options","text":"<p>Reference genome related files and options required for the workflow.</p> Parameter Description Type Default Required Hidden <code>genome</code> Name of iGenomes reference. HelpIf using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. <code>--genome GRCh38</code>. See the nf-core website docs for more details. <code>string</code> <code>fasta</code> Path to FASTA genome file. HelpThis parameter is mandatory if <code>--genome</code> is not specified.  <code>string</code> <code>fai</code> The index of the FASTA reference file <code>string</code> <code>bwa</code> Path to the BWA index folder <code>string</code> <code>expansionhunter_catalog</code> Path to the expansionhunter catalog <code>string</code> <code>qdnaseq_male</code> Path to the male qdnaseq reference file <code>string</code> <code>qdnaseq_female</code> Path to the female qdnaseq reference file <code>string</code> <code>wisecondorx_reference</code> Path to the wisecondorx reference file <code>string</code> <code>blacklist</code> Path to the blacklist file <code>string</code> <code>igenomes_ignore</code> Do not load the iGenomes reference config. HelpDo not load <code>igenomes.config</code> when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in <code>igenomes.config</code>. <code>boolean</code> True <code>genomes_base</code> The base path where the references can be found <code>string</code> <code>genomes_ignore</code> Whether or not to use the references found in the <code>--genomes_base</code> folder <code>boolean</code> <code>cmgg_config_base</code> The config base path for the cmgg configs <code>string</code> /conf/"},{"location":"parameters/#institutional-config-options","title":"Institutional config options","text":"<p>Parameters used to describe centralised config profiles. These should not be edited.</p> Parameter Description Type Default Required Hidden <code>custom_config_version</code> Git commit id for Institutional configs. <code>string</code> master True <code>custom_config_base</code> Base directory for Institutional configs. HelpIf you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter. <code>string</code> https://raw.githubusercontent.com/nf-core/configs/master True <code>config_profile_name</code> Institutional config name. <code>string</code> True <code>config_profile_description</code> Institutional config description. <code>string</code> True <code>config_profile_contact</code> Institutional config contact information. <code>string</code> True <code>config_profile_url</code> Institutional config URL link. <code>string</code> True"},{"location":"parameters/#max-job-request-options","title":"Max job request options","text":"<p>Set the top limit for requested resources for any single job.</p> Parameter Description Type Default Required Hidden <code>max_cpus</code> Maximum number of CPUs that can be requested for any single job. HelpUse to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. <code>--max_cpus 1</code> <code>integer</code> 16 True <code>max_memory</code> Maximum amount of memory that can be requested for any single job. HelpUse to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. <code>--max_memory '8.GB'</code> <code>string</code> 128.GB True <code>max_time</code> Maximum amount of time that can be requested for any single job. HelpUse to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. <code>--max_time '2.h'</code> <code>string</code> 240.h True"},{"location":"parameters/#generic-options","title":"Generic options","text":"<p>Less common options for the pipeline, typically set in a config file.</p> Parameter Description Type Default Required Hidden <code>help</code> Display help text. <code>boolean</code> True <code>version</code> Display version and exit. <code>boolean</code> True <code>publish_dir_mode</code> Method used to save pipeline results to output directory. HelpThe Nextflow <code>publishDir</code> option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See Nextflow docs for details. <code>string</code> copy True <code>email_on_fail</code> Email address for completion summary, only when pipeline fails. HelpAn email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully. <code>string</code> True <code>plaintext_email</code> Send plain-text email instead of HTML. <code>boolean</code> True <code>max_multiqc_email_size</code> File size limit when attaching MultiQC reports to summary emails. <code>string</code> 25.MB True <code>monochromeLogs</code> Do not use coloured log outputs. <code>boolean</code> True <code>hook_url</code> Incoming hook URL for messaging service HelpIncoming hook URL for messaging service. Currently, MS Teams and Slack are supported. <code>string</code> True <code>multiqc_config</code> Custom config file to supply to MultiQC. <code>string</code> True <code>multiqc_logo</code> Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file <code>string</code> True <code>multiqc_methods_description</code> Custom MultiQC yaml file containing HTML including a methods description. <code>string</code> <code>validate_params</code> Boolean whether to validate parameters against the schema at runtime <code>boolean</code> True True <code>validationShowHiddenParams</code> Show all params when using <code>--help</code> HelpBy default, parameters set as hidden in the schema are not shown on the command line when a user runs with <code>--help</code>. Specifying this option will tell the pipeline to show all parameters. <code>boolean</code> True <code>validationFailUnrecognisedParams</code> Validation of parameters fails when an unrecognised parameter is found. HelpBy default, when an unrecognised parameter is found, it returns a warinig. <code>boolean</code> True <code>validationLenientMode</code> Validation of parameters in lenient more. HelpAllows string values that are parseable as numbers or booleans. For further information see JSONSchema docs. <code>boolean</code> True"},{"location":"parameters/#pipeline-specific-options","title":"Pipeline specific options","text":"<p>Options specific to the execution of this pipeline</p> <p>| Parameter             | Description                                                                                                                                                                                     | Type      | Default | Required | Hidden                                                                                                                              | | --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------- | -------- | ---------------------------------------------- | ---- | --- | | <code>callers</code>             | A comma-seperated list of callers to use. Can be one or more these: smoove                                                                                                                      | delly     | manta   | gridss   | expansionhunter. At the moment Gridss runs very slowly compared to all other tools so it's only advised to use it when it's needed. | <code>string</code> | manta,smoove,delly,expansionhunter,wisecondorx | True |     | | <code>output_callers</code>      | Output the VCF files from different callers. Warning: This produces a lot of additional output and should only be used for testing purposes                                                     | <code>boolean</code> |         |          |                                                                                                                                     | | <code>sv_callers_support</code>  | The minimum amount of SV callers that should detect a variant. All variants that have a lower amount of callers supporting it, will be removed. (Only used when more than one caller is given)  | <code>integer</code> | 1       |          |                                                                                                                                     | | <code>cnv_callers_support</code> | The minimum amount of CNV callers that should detect a variant. All variants that have a lower amount of callers supporting it, will be removed. (Only used when more than one caller is given) | <code>integer</code> | 1       |          |                                                                                                                                     | | <code>annotate</code>            | Runs the annotation with Ensembl VEP when true                                                                                                                                                  | <code>boolean</code> |         |          |                                                                                                                                     | | <code>concat_output</code>       | Also output a concatenated VCF with all types analysed included (with the exception of CNVs)                                                                                                    | <code>boolean</code> |         |          |                                                                                                                                     | | <code>annotations_filter</code>  | The filter arguments to use after annotating. e.g. to filter out common variants.                                                                                                               | <code>string</code>  |         |          |                                                                                                                                     |</p>"},{"location":"parameters/#delly-parameters","title":"Delly parameters","text":"<p>Options specific for the Delly execution</p> Parameter Description Type Default Required Hidden <code>delly_sv_types</code> Which SV types delly should search for in the variant calling <code>string</code> ALL <code>delly_map_qual</code> The mapping quality to use for delly <code>integer</code> 1 <code>delly_min_clique_size</code> The minimum clique size to use for delly <code>integer</code> 2"},{"location":"parameters/#manta-parameters","title":"Manta parameters","text":"<p>Options specific for the Manta execution</p> Parameter Description Type Default Required Hidden <code>manta_config</code> A config file to supply to manta <code>string</code>"},{"location":"parameters/#qdnaseq-parameters","title":"qDNAseq parameters","text":"<p>Options specific for the qDNAseq execution</p> Parameter Description Type Default Required Hidden <code>qdnaseq_bin_size</code> The bin size to use for qdnaseq <code>integer</code> 100000 <code>qdnaseq_cnv_ratio</code> The minimum value of the absolute cnv ratio for a variant to be considered a CNV <code>number</code> 0.5"},{"location":"parameters/#vep-options","title":"VEP options","text":"<p>Options for the annotation with VEP</p> Parameter Description Type Default Required Hidden <code>vep_assembly</code> The genome assembly to download the cache of. HelpThis only needs to be supplied when no vep_cache is given <code>string</code> GRCh38 <code>vep_cache_version</code> The version of the VEP cache to use. HelpThis version should be present in the folder supplied by <code>--vep_cache</code>. This version should be the same as <code>--vep_version</code> when no VEP cache was given with <code>--vep_cache</code> <code>integer</code> 108 <code>vep_cache</code> The path to the VEP cache folder <code>string</code> <code>vep_version</code> The version of VEP to use <code>number</code> 109.3 <code>species</code> The species used for the analysis. Should be all lowercase and spaces should be underscorses. <code>string</code> homo_sapiens <code>vep_phenotypes</code> Use the Phenotypes VEP plugin HelpThis requires <code>--phenotypes</code> and <code>--phenotypes_tbi</code>.  <code>boolean</code> <code>phenotypes</code> Path to the phenotypes GFF file <code>string</code> <code>phenotypes_tbi</code> Path to the phenotypes GFF index file <code>string</code>"},{"location":"parameters/#annotsv-options","title":"AnnotSV options","text":"<p>Options specific to the execution of AnnotSV</p> Parameter Description Type Default Required Hidden <code>annotsv_annotations</code> The full path to the AnnotSV annotations folder. This can be a tarzipped folder. When --annotate is set to true and this isn't given, the annotations will be downloaded automatically (this is not recommended though) <code>string</code> <code>annotsv_candidate_genes</code> The full path the candidate genes file for AnnotSV <code>string</code> <code>annotsv_gene_transcripts</code> The full path to the gene transcripts file for AnnotSV <code>string</code> <code>annotsv_file_name</code> The default name of the AnnotSV VCFs <code>string</code> annotsv_annotated True"},{"location":"parameters/#vcfanno-options","title":"VCFanno options","text":"<p>Options for the execution of AnnotSV</p> Parameter Description Type Default Required Hidden <code>vcfanno_toml</code> The full path to the AnnotSV config TOML file. This file will be used to dynamically overwrite default configs for this pipeline run <code>string</code> <code>vcfanno_lua</code> The full path to a lua script for VCFanno <code>string</code> <code>vcfanno_resources</code> A comma-delimited list of files referenced in the VCFanno config. This can contain glob patterns as well. Place all filenames together between double qoutes to not cause any irregularities <code>string</code>"},{"location":"usage/","title":"Usage","text":"<p>Documentation of pipeline parameters can be found in the Parameters section</p>"},{"location":"usage/#introduction","title":"Introduction","text":"<p>Try out the pipeline right now with following command (make sure you have Docker and Nextflow installed):</p> <pre><code>nextflow run nf-cmgg/structural -profile test,docker --outdir results\n</code></pre>"},{"location":"usage/#samplesheet-input","title":"Samplesheet input","text":"<p>You will need to create a samplesheet with information about the samples you would like to analyse before running the pipeline. Use this parameter to specify its location. It can be a CSV (comma separated values), TSV (tab separated values), JSON (javascript object notation) or YAML file.</p> <pre><code>--input '[path to samplesheet file]'\n</code></pre>"},{"location":"usage/#minimum-required-samplesheet","title":"Minimum required samplesheet","text":"<p>Following samplesheets contain all required columns needed to run the pipeline for two samples.</p> samplesheet.csv<pre><code>sample,cram\nID01234,/path/to/ID01234.cram\nID56789,/path/to/ID56789.cram\n</code></pre> samplesheet.tsv<pre><code>sample  cram\nID01234 /path/to/ID01234.cram\nID56789 /path/to/ID56789.cram\n</code></pre> samplesheet.yaml<pre><code>- sample: ID01234\n  cram: /path/to/ID01234.cram\n- sample: ID56789\n  cram: /path/to/ID56789.cram\n</code></pre> samplesheet.json<pre><code>[\n  {\n    \"sample\": \"ID01234\",\n    \"cram\": \"/path/to/ID01234.cram\"\n  },\n  {\n    \"sample\": \"ID56789\",\n    \"cram\": \"/path/to/ID56789.cram\"\n  }\n]\n</code></pre>"},{"location":"usage/#all-samplesheet-options","title":"All samplesheet options","text":"<p>Following table contains all possible values for the samplesheet.</p> Column Description Type Required <code>sample</code> The custom sample name. Cannot contain spaces and doesn't have to unique. When the same sample has been given multiple times, the CRAM files will be merged. string <code>family</code> The family name of the current sample. All samples in the same family will be merged together at the end of the pipeline. Cannot contain spaces string <code>cram</code> Path to the CRAM file to be used by the pipeline for the current sample. string <code>crai</code> Path to the CRAM index file string <code>small_variants</code> A VCF containing the SNV (small nucleotide variants) for the current sample to be used by AnnotSV string <code>sex</code> The sex of the sample to be used by QDNAseq. Sex will be imputed when missing (Options: <code>male</code> or <code>female</code>) string <p>See following samplesheet for a working example of a samplesheet (used by the <code>test</code> profile of the pipeline):</p> example_samplesheet.csv<pre><code>sample,family,cram,crai,sex\nPosCon1,family_1,https://github.com/nf-cmgg/test-datasets/raw/main/data/genomics/homo_sapiens/illumina/cram/SVcontrol/PosCon1.cram,https://github.com/nf-cmgg/test-datasets/raw/main/data/genomics/homo_sapiens/illumina/cram/SVcontrol/PosCon1.cram.crai,male\nPosCon2,family_1,https://github.com/nf-cmgg/test-datasets/raw/main/data/genomics/homo_sapiens/illumina/cram/SVcontrol/PosCon2.cram,https://github.com/nf-cmgg/test-datasets/raw/main/data/genomics/homo_sapiens/illumina/cram/SVcontrol/PosCon2.cram.crai,female\nPosCon3,,https://github.com/nf-cmgg/test-datasets/raw/main/data/genomics/homo_sapiens/illumina/cram/SVcontrol/PosCon3.cram,https://github.com/nf-cmgg/test-datasets/raw/main/data/genomics/homo_sapiens/illumina/cram/SVcontrol/PosCon3.cram.crai,female\nPosCon4,,https://github.com/nf-cmgg/test-datasets/raw/main/data/genomics/homo_sapiens/illumina/cram/SVcontrol/PosCon4.cram,https://github.com/nf-cmgg/test-datasets/raw/main/data/genomics/homo_sapiens/illumina/cram/SVcontrol/PosCon4.cram.crai,male\n</code></pre>"},{"location":"usage/#running-the-pipeline","title":"Running the pipeline","text":"<p>The typical command for running the pipeline is as follows:</p> <pre><code>nextflow run nf-cmgg/structural --input ./samplesheet.csv --outdir ./results --genome GRCh38 -profile docker\n</code></pre> <p>This will launch the pipeline with the <code>docker</code> configuration profile. See below for more information about profiles.</p> <p>Note that the pipeline will create the following files in your working directory:</p> <pre><code>work          #(1)!\nresults       #(2)!\n.nextflow_log #(3)!\n...           #(4)!\n</code></pre> <ol> <li> <p>Directory containing the nextflow working files</p> </li> <li> <p>Finished results in specified location (defined with --outdir)</p> </li> <li> <p>Log file from Nextflow</p> </li> <li> <p>Other nextflow hidden files, eg. history of pipeline runs and old logs.</p> </li> </ol> <p>If you wish to repeatedly use the same parameters for multiple runs, rather than specifying each flag in the command, you can specify these in a params file.</p> <p>Pipeline settings can be provided in a <code>yaml</code> or <code>json</code> file via <code>-params-file &lt;file&gt;</code>.</p> <p>Warning</p> <p>Do not use <code>-c &lt;file&gt;</code> to specify parameters as this will result in errors. Custom config files specified with <code>-c</code> must only be used for tuning process resource specifications, other infrastructural tweaks (such as output directories), or module arguments (args).</p> <p>The above pipeline run specified with a params file in yaml format:</p> <pre><code>nextflow run nf-cmgg/structural -profile docker -params-file params.yaml\n</code></pre> <p>with <code>params.yaml</code> containing:</p> <pre><code>input: './samplesheet.csv'\noutdir: './results/'\ngenome: 'GRCh37'\n&lt;...&gt;\n</code></pre>"},{"location":"usage/#updating-the-pipeline","title":"Updating the pipeline","text":"<p>When you run the above command, Nextflow automatically pulls the pipeline code from GitHub and stores it as a cached version. When running the pipeline after this, it will always use the cached version if available - even if the pipeline has been updated since. To make sure that you're running the latest version of the pipeline, make sure that you regularly update the cached version of the pipeline:</p> <pre><code>nextflow pull nf-cmgg/structural\n</code></pre>"},{"location":"usage/#reproducibility","title":"Reproducibility","text":"<p>It is a good idea to specify a pipeline version when running the pipeline on your data. This ensures that a specific version of the pipeline code and software are used when you run your pipeline. If you keep using the same tag, you'll be running the same version of the pipeline, even if there have been changes to the code since.</p> <p>First, go to the nf-cmgg/structural releases page and find the latest pipeline version - numeric only (eg. <code>1.3.1</code>). Then specify this when running the pipeline with <code>-r</code> (one hyphen) - eg. <code>-r 1.3.1</code>. Of course, you can switch to another version by changing the number after the <code>-r</code> flag.</p> <p>This version number will be logged in reports when you run the pipeline, so that you'll know what you used when you look back in the future. For example, at the bottom of the MultiQC reports.</p> <p>To further assist in reproducbility, you can use share and re-use parameter files to repeat pipeline runs with the same settings without having to write out a command with every single parameter.</p> <p>Tip</p> <p>If you wish to share such profile (such as upload as supplementary material for academic publications), make sure to NOT include cluster specific paths to files, nor institutional specific profiles.</p>"},{"location":"usage/#core-nextflow-arguments","title":"Core Nextflow arguments","text":"<p>Note</p> <p>These options are part of Nextflow and use a single hyphen (pipeline parameters use a double-hyphen).</p>"},{"location":"usage/#-profile","title":"<code>-profile</code>","text":"<p>Use this parameter to choose a configuration profile. Profiles can give configuration presets for different compute environments.</p> <p>Several generic profiles are bundled with the pipeline which instruct the pipeline to use software packaged using different methods (Docker, Singularity, Podman, Shifter, Charliecloud, Apptainer, Conda) - see below.</p> <p>Info</p> <p>We highly recommend the use of Docker or Singularity containers for full pipeline reproducibility, however when this is not possible, Conda is also supported.</p> <p>The pipeline also dynamically loads configurations from https://github.com/nf-core/configs when it runs, making multiple config profiles for various institutional clusters available at run time. For more information and to see if your system is available in these configs please see the nf-core/configs documentation.</p> <p>Note that multiple profiles can be loaded, for example: <code>-profile test,docker</code> - the order of arguments is important! They are loaded in sequence, so later profiles can overwrite earlier profiles.</p> <p>If <code>-profile</code> is not specified, the pipeline will run locally and expect all software to be installed and available on the <code>PATH</code>. This is not recommended, since it can lead to different results on different machines dependent on the computer enviroment.</p> <ul> <li><code>test</code> <p>A profile with a complete configuration for automated testing Includes links to test data so needs no other parameters</p> </li> <li><code>docker</code> <p>A generic configuration profile to be used with Docker</p> </li> <li><code>singularity</code> <p>A generic configuration profile to be used with Singularity</p> </li> <li><code>podman</code> <p>A generic configuration profile to be used with Podman</p> </li> <li><code>shifter</code> <p>A generic configuration profile to be used with Shifter</p> </li> <li><code>charliecloud</code> <p>A generic configuration profile to be used with Charliecloud</p> </li> <li><code>apptainer</code> <p>A generic configuration profile to be used with Apptainer</p> </li> <li><code>conda</code> <p>A generic configuration profile to be used with Conda. Please only use Conda as a last resort i.e. when it's not possible to run the pipeline with Docker, Singularity, Podman, Shifter, Charliecloud, or Apptainer.</p> </li> </ul>"},{"location":"usage/#-resume","title":"<code>-resume</code>","text":"<p>Specify this when restarting a pipeline. Nextflow will use cached results from any pipeline steps where the inputs are the same, continuing from where it got to previously. For input to be considered the same, not only the names must be identical but the files' contents as well. For more info about this parameter, see this blog post.</p> <p>You can also supply a run name to resume a specific run: <code>-resume [run-name]</code>. Use the <code>nextflow log</code> command to show previous run names.</p>"},{"location":"usage/#-c","title":"<code>-c</code>","text":"<p>Specify the path to a specific config file (this is a core Nextflow command). See the nf-core website documentation for more information.</p>"},{"location":"usage/#custom-configuration","title":"Custom configuration","text":""},{"location":"usage/#resource-requests","title":"Resource requests","text":"<p>Whilst the default requirements set within the pipeline will hopefully work for most people and with most input data, you may find that you want to customise the compute resources that the pipeline requests. Each step in the pipeline has a default set of requirements for number of CPUs, memory and time. For most of the steps in the pipeline, if the job exits with any of the error codes specified here it will automatically be resubmitted with higher requests (2 x original, then 3 x original). If it still fails after the third attempt then the pipeline execution is stopped.</p> <p>To change the resource requests, please see the max resources and tuning workflow resources section of the nf-core website.</p>"},{"location":"usage/#custom-containers","title":"Custom Containers","text":"<p>In some cases you may wish to change which container or conda environment a step of the pipeline uses for a particular tool. By default this pipeline uses containers and software from the biocontainers or bioconda projects. However in some cases the pipeline specified version maybe out of date.</p> <p>To use a different container from the default container or conda environment specified in a pipeline, please see the updating tool versions section of the nf-core website.</p>"},{"location":"usage/#custom-tool-arguments","title":"Custom Tool Arguments","text":"<p>A pipeline might not always support every possible argument or option of a particular tool used in pipeline. Fortunately, this pipeline provides some freedom to users to insert additional parameters that the pipeline does not include by default.</p> <p>To learn how to provide additional arguments to a particular tool of the pipeline, please see the customising tool arguments section of the nf-core website.</p>"},{"location":"usage/#nf-coreconfigs","title":"nf-core/configs","text":"<p>In most cases, you will only need to create a custom config as a one-off but if you and others within your organisation are likely to be running nf-core pipelines regularly and need to use the same settings regularly it may be a good idea to request that your custom config file is uploaded to the <code>nf-core/configs</code> git repository. Before you do this please can you test that the config file works with your pipeline of choice using the <code>-c</code> parameter. You can then create a pull request to the <code>nf-core/configs</code> repository with the addition of your config file, associated documentation file (see examples in <code>nf-core/configs/docs</code>), and amending <code>nfcore_custom.config</code> to include your custom profile.</p> <p>See the main Nextflow documentation for more information about creating your own configuration files.</p> <p>If you have any questions or issues please send us a message on Slack on the <code>#configs</code> channel.</p>"},{"location":"usage/#azure-resource-requests","title":"Azure Resource Requests","text":"<p>To be used with the <code>azurebatch</code> profile by specifying the <code>-profile azurebatch</code>. We recommend providing a compute <code>params.vm_type</code> of <code>Standard_D16_v3</code> VMs by default but these options can be changed if required.</p> <p>Note that the choice of VM size depends on your quota and the overall workload during the analysis. For a thorough list, please refer the Azure Sizes for virtual machines in Azure.</p>"},{"location":"usage/#running-in-the-background","title":"Running in the background","text":"<p>Nextflow handles job submissions and supervises the running jobs. The Nextflow process must run until the pipeline is finished.</p> <p>The Nextflow <code>-bg</code> flag launches Nextflow in the background, detached from your terminal so that the workflow does not stop if you log out of your session. The logs are saved to a file.</p> <p>Alternatively, you can use <code>screen</code> / <code>tmux</code> or similar tool to create a detached session which you can log back into at a later time. Some HPC setups also allow you to run nextflow within a cluster job submitted your job scheduler (from where it submits more jobs).</p>"},{"location":"usage/#nextflow-memory-requirements","title":"Nextflow memory requirements","text":"<p>In some cases, the Nextflow Java virtual machines can start to request a large amount of memory. We recommend adding the following line to your environment to limit this (typically in <code>~/.bashrc</code> or <code>~./bash_profile</code>):</p> <pre><code>NXF_OPTS='-Xms1g -Xmx4g'\n</code></pre>"}]}
/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        GATHER SAMPLE EVIDENCE
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */

    withName: BEDTOOLS_SORT {
        ext.prefix = {"${meta.id}_sorted"}
    }

    withName: COLLECTREADCOUNTS {
        ext.args = "--format TSV --interval-merging-rule OVERLAPPING_ONLY --disable-read-filter MappingQualityReadFilter"
    }

    withName: DELLY_CALL {
        ext.args = {"--svtype ${params.delly_sv_types}"}
    }

    withName: BEDTOOLS_MERGE {
        ext.args = "-d ${params.whamg_bed_overlap}"
        ext.prefix = {"${meta.id}.merged"}
    }

    withName: WHAMG {
        ext.args = {[
            meta.region ? "-r ${meta.region}" : "" ,
            "-z"
        ].join(' ').trim()}
    }

    withName: 'CENTER_FOR_MEDICAL_GENETICS_NF_CMGG_STRUCTURAL:NF_CMGG_STRUCTURAL:GATHER_SAMPLE_EVIDENCE:RUN_MANTA:BCFTOOLS_REHEADER' {
        ext.args    = {"-s <(echo \"${meta.id}\")"}
        ext.prefix  = {"${meta.id}_correct_header"}
    }

    withName: SCRAMBLE_CLUSTERANALYSIS {
        ext.args = "--eval-meis"
    }

    withName: COLLECTSVEVIDENCE {
        ext.args = {"--sample-name ${meta.id}"}
    }

    withName: SVTK_STANDARDIZE {
        ext.args = {[
            args    : '',
            caller  : "${meta.caller != "whamg" ? meta.caller : "wham"}"
        ]}
    }

    withName: SVTEST_VCF {
        ext.args = {[
            args   : '',
            types  : "DEL,DUP,INS,INV,BND"
        ]}
    }

    withName: "^.*GATHER_SAMPLE_EVIDENCE:MERGE_VCFS:TABIX_BGZIP\$" {
        ext.prefix = {"${meta.caller}_${meta.id}"}
    }

    withName: JASMINESV {
        ext.args = "min_support=3"
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        REST OF THE PIPELINE
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */

    withName: SET_BINS {
        ext.binsize = ''
    }

    withName: 'CENTER_FOR_MEDICAL_GENETICS_NF_CMGG_STRUCTURAL:NF_CMGG_STRUCTURAL:EVIDENCE_QC:BEDTOOLS_INTERSECT' {
        ext.args = '-f 0.49 -wa -u | sort -Vk1,1 -k2,2n -k3,3n'
        ext.prefix = 'batch'
    }

    withName: INDVIDUAL_QC {
        ext.prefix = {"${meta.caller}.${meta.id}"}
    }

    withName: PICK_OUTLIERS {
        ext.prefix = {"${meta.caller}.${meta.id}"}
    }

    withName: TABIX_EVIDENCE {
        ext.args = "-s1 -b2 -e2"
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}

nextflow_pipeline {

    name "Tests using all callers with annotation"
    script "main.nf"
    options "-stub"
    tag "all_annotate"

    test("Success") {
        when {
            params {
                callers  = "delly,manta,smoove,gridss,expansionhunter,qdnaseq,wisecondorx"
                annotate = true
                concat_output = true
                annotations_filter = '-i FILTER="PASS"'
                outdir = "${outputDir}"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert file("${outputDir}/PosCon1/PosCon1.sv.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.sv.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.sv.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.sv.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.sv.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.sv.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.sv.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.sv.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.sv.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.sv.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.repeats.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.repeats.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.repeats.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.repeats.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.repeats.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.repeats.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.repeats.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.repeats.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.repeats.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.repeats.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.concat.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.concat.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.concat.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.concat.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.concat.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.concat.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.concat.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.concat.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.concat.vcf.gz").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.concat.vcf.gz.tbi").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.qdnaseq_segments.txt").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.qdnaseq.bed").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.qdnaseq.cna").exists() },
                { assert file("${outputDir}/PosCon1/statistics.out").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.qdnaseq_segments.txt").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.qdnaseq.bed").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.qdnaseq.cna").exists() },
                { assert file("${outputDir}/PosCon2/statistics.out").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.qdnaseq_segments.txt").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.qdnaseq.bed").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.qdnaseq.cna").exists() },
                { assert file("${outputDir}/PosCon3/statistics.out").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.qdnaseq_segments.txt").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.qdnaseq.bed").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.qdnaseq.cna").exists() },
                { assert file("${outputDir}/PosCon4/statistics.out").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.qdnaseq_segments.txt").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.qdnaseq.bed").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.qdnaseq.cna").exists() },
                { assert file("${outputDir}/PosCon5/statistics.out").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.wisecondorx_aberrations.bed").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.wisecondorx_bins.bed").exists() },
                { assert file("${outputDir}/PosCon1/PosCon1.wisecondorx_segments.bed").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.wisecondorx_aberrations.bed").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.wisecondorx_bins.bed").exists() },
                { assert file("${outputDir}/PosCon2/PosCon2.wisecondorx_segments.bed").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.wisecondorx_aberrations.bed").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.wisecondorx_bins.bed").exists() },
                { assert file("${outputDir}/PosCon3/PosCon3.wisecondorx_segments.bed").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.wisecondorx_aberrations.bed").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.wisecondorx_bins.bed").exists() },
                { assert file("${outputDir}/PosCon4/PosCon4.wisecondorx_segments.bed").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.wisecondorx_aberrations.bed").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.wisecondorx_bins.bed").exists() },
                { assert file("${outputDir}/PosCon5/PosCon5.wisecondorx_segments.bed").exists() }
            )
        }
    }
}

nextflow_pipeline {

    name "Tests using only Manta"
    script "main.nf"

    test("Success") {
        when {
            params {
                callers = "manta"
            }
        }

        then {
            assert workflow.success
            assert file("${outputDir}/PosCon1/PosCon1.vcf.gz").exists()
            assert file("${outputDir}/PosCon1/PosCon1_genotyped.vcf.gz").exists()
            assert file("${outputDir}/PosCon1/PosCon1.vcf.gz.tbi").exists()
            assert file("${outputDir}/PosCon2/PosCon2.vcf.gz").exists()
            assert file("${outputDir}/PosCon2/PosCon2_genotyped.vcf.gz").exists()
            assert file("${outputDir}/PosCon2/PosCon2.vcf.gz.tbi").exists()
            assert file("${outputDir}/PosCon3/PosCon3.vcf.gz").exists()
            assert file("${outputDir}/PosCon3/PosCon3_genotyped.vcf.gz").exists()
            assert file("${outputDir}/PosCon3/PosCon3.vcf.gz.tbi").exists()
            assert file("${outputDir}/PosCon4/PosCon4.vcf.gz").exists()
            assert file("${outputDir}/PosCon4/PosCon4_genotyped.vcf.gz").exists()
            assert file("${outputDir}/PosCon4/PosCon4.vcf.gz.tbi").exists()
            assert file("${outputDir}/ready/family_1/family_1.vcf.gz").exists()
            assert file("${outputDir}/ready/PosCon3/PosCon3.vcf.gz").exists()
            assert file("${outputDir}/ready/PosCon4/PosCon4.vcf.gz").exists()
        }
    }
}

nextflow_workflow {

    name "Test Workflow BAM_VARIANT_CALLING_GRIDSS"
    script "subworkflows/local/bam_variant_calling_gridss/main.nf"
    workflow "BAM_VARIANT_CALLING_GRIDSS"

    tag "subworkflows"
    tag "subworkflows_local"
    tag "bam_variant_calling_gridss"

    config "./nextflow.config"

    test("homo_sapiens") {

        setup {
            run("UNTAR") {
                script "modules/nf-core/untar/main.nf"
                process {
                    """
                    input[0] = Channel.value([
                        [id:"bwa"],
                        file(params.bwa, checkIfExists: true)
                    ])
                    """
                }
            }
        }

        when {
            workflow {
                """
                input[0] = Channel.of([
                    [id:"test", sample:"test", sex:"male"],
                    file(params.cram1, checkIfExists: true),
                    file(params.crai1, checkIfExists: true)
                ])
                input[1] = Channel.value([
                    [id:"fasta"],
                    file(params.fasta, checkIfExists: true)
                ])
                input[2] = Channel.value([
                    [id:"fai"],
                    file(params.fai, checkIfExists: true)
                ])
                input[3] = UNTAR.out.untar
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    path(workflow.out.gridss_vcfs[0][1]).linesGzip[-4..-1],
                    file(workflow.out.gridss_vcfs[0][2]).name
                ).match() }
            )
        }

    }

}

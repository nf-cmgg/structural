process {

        withName: BCFTOOLS_FILTER {
            ext.prefix = {"${meta.id}.filter"}
            ext.args = "-e 'GT=\"ref\"' --output-type z"
        }

        withName: ANNOTSV_ANNOTSV {
            ext.args = "-SVminSize 20"
            ext.prefix = {"${meta.id}.annot"}
        }

        withName: BCFTOOLS_CONCAT {
            ext.prefix = params.annotsv_file_name
            ext.args = "--output-type z --naive-force"
        }

        withName: ENSEMBLVEP_VEP {
            ext.prefix = {"${meta.id}.vep"}
            ext.args = {[
                // specify we use VCF files
                '--format vcf',
                // don't contact external db
                '--offline',
                // increase buffer_size to speed up analysis
                '--buffer_size 100000',
                // output format options
                '--vcf --compress_output bgzip --force_overwrite',
                // co-located variant info
                '--check_existing',
                // specific options for structural variants
                '--overlaps', // TODO define the best configuration for --max_sv_size, --batch_size, --check_svs and --database
                // annotations
                '--regulatory --pubmed --symbol --hgvsg --hgvs --af_gnomadg --sift s',
                // proteins
                '--domains --biotype --canonical --mane --ccds --protein --polyphen s --sift s',
            ].join(' ').trim()}
        }

        withName: VCFANNO {
            ext.args = "-permissive-overlap -ends"
        }

        if(!params.annotations_filter) {
            withName: TABIX_ANNOTATED {
                ext.prefix = { "${meta.id}.${meta.variant_type}" }
            }
        }

        if(params.annotations_filter) {
            withName: BCFTOOLS_FILTER_COMMON {
                ext.prefix = {"${meta.id}.${meta.variant_type}"}
                ext.args = "${params.annotations_filter} --output-type z"
            }
        }

}